//===== Hercules Script ======================================
//= Quest Warper Script
//===== By: ==================================================
//= DZeroX, Darkchild, Neouni
//===== Current Version: =====================================
//= 2.3
//===== Description: =========================================
//= Warper that works only after locations are unlocked.
//===== Additional Comments: =================================
//= 1.0 - NPCs created
//= 1.1 - Add Dungeons by sturm
//= 1.2 - Add All char in account unlocked by ace_killer
//= 1.3 - Add new 7 towns and 7 dungeons by escoteiro
// - Correct bug jawaii town by escoteiro
// - Remove some excessive warpras by escoteiro
//= 1.4 - Rewrite of the Warpa system [Neouni]
// - Corrected some bugs caused by autoconverting the old script
//= 1.4a - Rewrite of menu to be custom for each player [Neouni]
// - Dungeon listing rewrite
// - Town listing rewrite
// - GameMaster can Customise Main menu
//= 1.4b - Pricing round [Neouni]
// - GM menu added for pricing
// - Town Warp pricing tags added
// - Dungeon Warp pricing tags added
//= 1.5 - storage functions pricing [Neouni]
// - storage pricing added
// - kafra points setting added
// - kafra storage code security added
// - Healing scripts pricing added
// - Heal Part script added
//= 1.6 - Dungeon warp [Neouni] (beta only)
// - added option to add a extra fee for going down deeper into dungeon
// partly by rebuilding the dungeon warping into variable menu's
//= 1.6a - alot of fixes for beta release [Neouni] (public release)
// - fixed syntax problems
// - fixed missing pyramid gats in @DGat$ array
// - removed the culver level 5 that didn't exist
//= 1.7 - Readability of Dungeon menu building increased [Neouni]
// - Thanatos Tower & Louyang Dungeon added
//= 1.8 - changed around unlock variables [Neouni]
// - Moved warp variables to mark what you have unlocked to an binary array in login based permanent variable
// (warp variables are saved in login database, so all charservers have these unlocked)
// - Town Warp unlock array max 21/(unknown max) items used instead of max account #variables 32 !
// - Dungeon Warp unlock array 28/(unknown max) items used instead of max account #variables 32 !
// - (max login ##variables = 16, i used 3)
// - old variables are cleared on next save
// - Extra Variable clear added for every character, just in case (request by Terces)
//= 1.8a - Show amount of users on map [Neouni]
//= 1.8b - Small typo fixed in stampcard script [Neouni]
//= 1.9 - Making it more edit friendly [Neouni]
// - Made Dungeon warp arrays more readable & editable (QWS_Darray)
// - Made town warp arrays more readable & editable (QWS_Tarray)
//= 2.0 - Special Warp menu added [Neouni]
// - when all towns and dungeons are collected a new option on the main menu will show
// - it will only show when you setup the mapname of the warp !
//= 2.0a - Dungeon Level Limit & Split dungeon fees
// - Limits dungeon based on Depth, access to special setup menu through the GM-Menu
// - Dungeon fees split up based on  Basic , Advanced & Overseas
// - Old Dungeon fee system removed, all dungeon fees now set to 0
//= 2.0b - Special warpname menu option name bug fixed
//= 2.1 - Updated names to fall within retrictions. [L0ne_W0lf]
//= 2.2 - #kafra_code is now stored as is. [brianluau]
//= 2.3 - Added new town maps, cleanup, and removed pre-1.8 backwards fix. [Euphy]
//=================================================================

//========================Function & Script========================

function	script	Q_Teleportadora	{
	mes "[Quest Warper]";
	mes "Olá,";
	mes "Eu posso te teletransportar pra qualquer Caverna/Masmora e também pra aquelas que é necessário uma quest, entretanto você deve visita-los primeiro.";
	mes "O que você deseja?";

	if(getarg(0) == 0) callfunc "QWS_MMarray",0;
	if(getarg(0) == 1) callfunc "QWS_MMarray",1;

	set @MMenu,select(@Mmenulist$[0],@Mmenulist$[1],@Mmenulist$[2],@Mmenulist$[3],@Mmenulist$[4],@Mmenulist$[5],@Mmenulist$[6],@Mmenulist$[7],@Mmenulist$[8],@Mmenulist$[9],@Mmenulist$[10],@Mmenulist$[11]);

	switch(@Mmenuref[@MMenu-1]+1){
	case 1: goto GM_Menu;
	case 2:
		warp $QW_SP_WarpMap$, $QW_SP_WarpX, $QW_SP_WarpY;
		close2;
		consolemes(CONSOLEMES_WARNING, "Please check your special warp menu settings on the Teleportadora.");
		end;
	case 3: goto L_town;
	case 4: goto L_dungeon;
	case 5: goto L_FewWarps;
	case 6: goto L_NoUnlock;
	case 7: goto L_heal_Full;
	case 8: goto L_heal_Part;
	case 9: goto L_Storage;
	case 10: goto L_GStorage;
	case 11:
	default:
		goto L_End;
	}

//=====================GM-Menu=Functions===========================

GM_Menu:
	next;
	mes "Town warping = "+(($QW_TW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Dungeon warping = "+(($QW_DW_OFF)?"^FF0000 Off":"^00FF00 On")+"^000000";
	mes "Dungeon Depth limit is "+(($QW_DL)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "If on Dungeon Depth limit is set to ^0000FF"+$QW_DDL+"^000000";
	mes "Show Map Users = "+(($QW_MapUserShow)?"^00FF00 On":"^FF0000 Off")+"^000000";

	if ($QW_HF) mes "Healing full = ^00FF00 On ^000000";
	if ($QW_HP) mes "Healing partly = ^00FF00 On ^000000";
	if (!$QW_HF && !$QW_HP) mes "Healing = ^FF0000 Off ^000000";

	mes "Storage = "+(($QW_Stor)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "Guild Storage = "+(($QW_GStor)?"^00FF00 On":"^FF0000 Off")+"^000000";
	mes "Kafra points collect = "+(($QW_KPoint)?"^00FF00 On":"^FF0000 Off")+"^000000";

	switch(select("Town Warping","Dungeon Warping","Dungeon Level Limit","Show Map Users","Healing full","Healing partly","Storage","Guild Storage","Kafra points collect","Set Prices","Special Warp","Exit")) {
	case 1: set $QW_TW_OFF,($QW_TW_OFF)?0:1; goto GM_Menu;
	case 2: set $QW_DW_OFF,($QW_DW_OFF)?0:1; goto GM_Menu;
	case 3: goto DungeonLevelLimit;
	case 4: set $QW_MapUserShow,($QW_MapUserShow)?0:1; goto GM_Menu;
	case 5:
		if ($QW_HF == 0) {
			set $QW_HF,1;
			set $QW_HP,0;
		}
		else set $QW_HF,0;
		goto GM_Menu;
	case 6:
		if ($QW_HP == 0) {
			set $QW_HP,1;
			set $QW_HF,0;
		}
		else set $QW_HP,0;
		goto GM_Menu;
	case 7: set $QW_Stor,($QW_Stor)?0:1; goto GM_Menu;
	case 8: set $QW_GStor,($QW_GStor)?0:1; goto GM_Menu;
	case 9: set $QW_KPoint,($QW_KPoint)?0:1; goto GM_Menu;
	case 10: goto Setprice;
	case 11: goto SpecialWarpMenu;
	default:
		close;
		end;
	}

//======================GM-Menu=Pricing============================

Setprice:
	if ($QW_DW_FEE != 0) set $QW_DW_FEE,0;
	next;
	mes "Scroll through the list to see all the options.";

	mes "Basic - Warps are = "+(($QW_BW_PRICE)?"^00FF00"+$QW_BW_PRICE:"^FF0000Free")+"^000000";
	mes "Advanced - Warps are = "+(($QW_AW_PRICE)?"^00FF00"+$QW_AW_PRICE:"^FF0000Free")+"^000000";
	mes "Overseas - Warps are = "+(($QW_OW_PRICE)?"^00FF00"+$QW_OW_PRICE:"^FF0000Free")+"^000000";

	mes "Basic Dungeon level warp fee = "+(($QW_BW_FEE)?"^00FF00"+$QW_BW_FEE:"^FF0000NO")+"^000000 zeny per level";
	mes "Advanced Dungeon level warp fee = "+(($QW_AW_FEE)?"^00FF00"+$QW_AW_FEE:"^FF0000NO")+"^000000 zeny per level";
	mes "Overseas Dungeon level warp fee = "+(($QW_OW_FEE)?"^00FF00"+$QW_OW_FEE:"^FF0000NO")+"^000000 zeny per level";

	mes "Full Healing = "+(($QW_HF_PRICE)?"^00FF00"+$QW_HF_PRICE:"^FF0000Free")+"^000000";
	mes "^FF0000HP ^000000Part Healing = "+(($QW_HP_H_PRICE)?"^00FF00"+$QW_HP_H_PRICE+"^000000 a point":"^FF0000Free^000000");
	mes "^FF0000SP ^000000Part Healing = "+(($QW_HP_S_PRICE)?"^00FF00"+$QW_HP_S_PRICE+"^000000 a point":"^FF0000Free^000000");

	if ($QW_S_PRICE && $QW_S_PRICE != 60) mes "Storage = ^00FF00 "+$QW_S_PRICE+" ^000000";
	if (!$QW_S_PRICE) mes "Storage = ^FF0000 Free ^000000";
	if ($QW_S_PRICE == 60) mes "Storage = ^0000FF Kafra Mode ^000000";
	mes "Guild Storage = "+(($QW_GS_PRICE)?"^00FF00"+$QW_GS_PRICE:"^FF0000Free")+"^000000";

	switch(select("Basic - Warps","Advanced - Warps","Overseas - Warps","Basic Dungeon warp fee","Advanced Dungeon warp fee","Overseas Dungeon warp fee","Full Healing","Part Healing","Storage","Guild Storage","Back","Exit")) {
	case 1:
		next;
		mes "Basic - Warps are = "+(($QW_BW_PRICE)?"^00FF00"+$QW_BW_PRICE:"^FF0000Free")+"^000000";
		mes "Basic - Warps are starter towns and related dungeons.";
		input($QW_BW_PRICE, 0);
		goto Setprice;
	case 2:
		next;
		mes "Advanced - Warps are = "+(($QW_AW_PRICE)?"^00FF00"+$QW_AW_PRICE:"^FF0000Free")+"^000000";
		mes "Advanced - Warps are towns and dungeons on the same island but not close to any starter town.";
		input($QW_AW_PRICE, 0);
		goto Setprice;
	case 3:
		next;
		mes "Overseas - Warps are = "+(($QW_OW_PRICE)?"^00FF00"+$QW_OW_PRICE:"^FF0000Free")+"^000000";
		mes "Overseas - Warps are towns and dungeons overseas reachable by boat from Alberta.";
		input($QW_OW_PRICE, 0);
		goto Setprice;
	case 4:
		next;
		mes "Basic Dungeon level warp fee = "+(($QW_BW_FEE)?"^00FF00"+$QW_BW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Basic - Warps are starter town related dungeons.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input($QW_BW_FEE, 0);
		goto Setprice;
	case 5:
		next;
		mes "Advanced Dungeon level warp fee = "+(($QW_AW_FEE)?"^00FF00"+$QW_AW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Advanced - Warps are dungeons not close to any starter town.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input($QW_AW_FEE, 0);
		goto Setprice;
	case 6:
		next;
		mes "Overseas Dungeon level warp fee = "+(($QW_OW_FEE)?"^00FF00"+$QW_OW_FEE:"^FF0000NO")+"^000000 zeny per level";
		mes "Overseas - Warps are dungeons related to towns overseas reachable by boat from Alberta.";
		mes "Dungeon warp fees are calculated by maps away from entrance of the dungeon times Dungeon warp fee.";
		mes "These costs are on top of the regular Warp costs.";
		input($QW_OW_FEE, 0);
		goto Setprice;
	case 7:
		next;
		mes "Full Healing = "+(($QW_HF_PRICE)?"^00FF00"+$QW_HF_PRICE:"^FF0000Free")+"^000000";
		mes "Instant full healing 1 price.";
		input($QW_HF_PRICE, 0);
		goto Setprice;
	case 8:
		next;
		mes "^FF0000HP ^000000Part Healing = "+(($QW_HP_H_PRICE)?"^00FF00"+$QW_HP_H_PRICE+"^000000 a point":"^FF0000Free^000000");
		mes "^FF0000SP ^000000Part Healing = "+(($QW_HP_S_PRICE)?"^00FF00"+$QW_HP_S_PRICE+"^000000 a point":"^FF0000Free^000000");
		mes "Healing price per 1 HP.";
		mes "Healing price per 1 SP.";
		mes "2 inputs, first HP then SP.";
		input($QW_HP_H_PRICE, 0);
		input($QW_HP_S_PRICE, 0);
		goto Setprice;
	case 9:
		next;
		if ($QW_S_PRICE && $QW_S_PRICE != 60) mes "Storage = ^00FF00 "+$QW_S_PRICE+" ^000000";
		if (!$QW_S_PRICE) mes "Storage = ^FF0000 Free ^000000";
		if ($QW_S_PRICE == 60) mes "Storage = ^0000FF Kafra Mode ^000000";
		mes "Storage cost, if set to 60 Kafra pricing will be handled.";
		input($QW_S_PRICE, 0);
		goto Setprice;
	case 10:
		next;
		mes "Guild Storage = "+(($QW_GS_PRICE)?"^00FF00"+$QW_GS_PRICE:"^FF0000Free")+"^000000";
		mes "Guild Storage, free on Guild Kafras.";
		input($QW_GS_PRICE, 0);
		goto Setprice;
	case 11:
		goto GM_Menu;
	default:
		close;
		end;
	}

//======================Special=Warp=Menu==========================

SpecialWarpMenu:
	if ($QW_SP_Warpname$ == "") set $QW_SP_Warpname$,"Special Warp";
	next;
	mes "Scroll down to see all the information";
	mes "The Special warp menu option will show in the main menu when all towns & dungeons are unlocked";
	mes "And when the map for special warping has been set";
	mes "menu option name set to ^0000FF"+$QW_SP_Warpname$+"^000000";
	if ($QW_SP_WarpMap$ == "") mes "map is currently ^FF0000not^000000 set, and Special warp menu is off";
	if ($QW_SP_WarpMap$ != "") mes "map is currently set to ^0000FF"+$QW_SP_WarpMap$+"^000000 and Special Warp menu is on";
	mes "coords are set to ^0000FF"+$QW_SP_WarpX+","+$QW_SP_WarpY+"^000000";
	switch(select("Set Special Warp name to show in menu", "Set WarpMap","Set Coords","Go Back to GM_Menu","Exit")){
	case 1:
		next;
		mes "Set the name to show in the menu as option.";
		input($QW_SP_Warpname$, 0);
		goto SpecialWarpMenu;
	case 2:
		next;
		mes "Set the map in the ^0000FFmapname^000000 format.";
		mes "When this warpmap is set the option for players will show once they meet the requirments.";
		mes "To disable Special Warp Menu option, clear this!";
		input($QW_SP_WarpMap$, 0);
		goto SpecialWarpMenu;
	case 3:
		next;
		mes "First input = Xcoord";
		mes "Second input = Ycoord";
		input($QW_SP_WarpX, 0);
		input($QW_SP_WarpY, 0);
		goto SpecialWarpMenu;
	case 4:
		goto GM_Menu;
	default:
		close;
		end;
	}

//======================Dungeon=Level=Limit========================

DungeonLevelLimit:
	next;
	mes "Dungeon Depth limit is "+(($QW_DL)?"^00FF00On":"^FF0000Off")+"^000000";
	mes "If^00FF00 On ^000000Dungeon Depth limit is set to ^0000FF"+$QW_DDL+"^000000";

	switch(select("Toggle Dungeon Depth Limit","Set Dungeon Depth Limit","Go Back to GM_Menu","Exit")){
	case 1: set $QW_DL,($QW_DL)?0:1; goto DungeonLevelLimit;
	case 2:
		next;
		mes "Set limit of Dungeon Depth 0 = entrance";
		mes "Depth 1 is a map connected to 0 and so on";
		mes "Shortest Route to map counts as depth";
		input($QW_DDL, 0);
		goto DungeonLevelLimit;
	case 3: goto GM_Menu;
	default:
		close;
		end;
	}

//===========================Towns=================================

L_town:
	callfunc "QWS_Tarray";
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<35; set .@i,.@i+1)	// Expected maximum is 35
		set .@menu$,.@menu$+@Tmenulist$[.@i]+":";
	freeloop(0);
	set @TWMenu,select(.@menu$);

	if (@Tmenuref[@TWMenu-1] == 57005) goto L_End; // 57005='dead' in hex

	if(Zeny<@pTprice[@Tmenuref[@TWMenu-1]]) callsub L_Short_on_zeny,0;
	Zeny -= @pTprice[@Tmenuref[@TWMenu-1]];
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@pTprice[@Tmenuref[@TWMenu-1]]/16);
	warp @pTmap$[@Tmenuref[@TWMenu-1]],@pTXcoords[@Tmenuref[@TWMenu-1]],@pTYcoords[@Tmenuref[@TWMenu-1]];
	close2;
	Zeny += @pTprice[@Tmenuref[@TWMenu-1]];
	end;

//=========================Dungeons================================

L_dungeon:
	callfunc "QWS_Darray";
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<35; set .@i,.@i+1)	// Expected maximum is 35
		set .@menu$,.@menu$+@Dmenulist$[.@i]+":";
	freeloop(0);
	set @DWMenu,select(.@menu$);

	if (@Dmenuref[@DWMenu-1] == 57005) goto L_End; // 57005='dead' in hex
	set @DwarpMenu, (@Dmenuref[@DWMenu-1]);
	callfunc "QWS_DLarray";

	next;
	mes "[Quest Warper]";
	mes "Please select where you want to go:";
	freeloop(1);
	set .@menu$,"";
	for(set .@i,0; .@i<18; set .@i,.@i+1)	// Expected maximum is 18
		set .@menu$,.@menu$+@DWLmenulist$[.@i]+":";
	freeloop(0);
	set @DWLMenu,select(.@menu$);

	if (@DWLmenuref[@DWLMenu-1] == 57005) goto L_End; // 57005='dead' in hex

	set @Darrayref, @DWLmenuref[@DWLMenu-1];
	set @warpprice, @pDprice[@Dmenuref[@DWMenu-1]]+(getd(@pDfee$[@Dmenuref[@DWMenu-1]])*(@DDepth[@Darrayref]));

	if(Zeny<@warpprice) callsub L_Short_on_zeny,1;
	Zeny -= (@warpprice);
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@warpprice/16);
	warp @DGat$[@Darrayref],@DXcoords[@Darrayref],@DYcoords[@Darrayref];
	close2;
	Zeny += @pTprice[@Tmenuref[@DWMenu-1]];
	end;

//=============================Healing=============================

L_heal_Full:
	set @healfee, $QW_HF_PRICE;
	if(Zeny<@healfee) callsub L_Short_on_zeny,4;
	Zeny -= @healfee;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@healfee/500);
	next;
	mes "[Quest Warper]";
	mes "Close this window and I will heal you.";
	close2;
	percentheal 100,100;
	end;

L_heal_Part:
	set @healchoice,select("Full heal","Health Points only","Skill Points only","Exit");
	if (@healchoice == 1) callsub PHeal,1,1;
	if (@healchoice == 2) callsub PHeal,1,0;
	if (@healchoice == 3) callsub PHeal,0,1;
	goto L_End;

PHeal:
	next;
	set @Hp, MaxHp-Hp;
	set @Sp, MaxSp-Sp;
	set @HpPrice, @Hp*$QW_HP_H_PRICE;
	set @SpPrice, @Sp*$QW_HP_S_PRICE;
	mes "[Quest Warper]";
	if(getarg(0) == 1) mes ""+@HpPrice+" Zeny for "+@Hp+" health points";
	if(getarg(1) == 1) mes ""+@SpPrice+" Zeny for "+@Sp+" skill points";
	set @total, @HpPrice+@SpPrice;
	mes "for a total of "+@total+" zeny";
	if (select("Heal me","Let me see the choices again")==2) goto L_heal_Part;

	if(getarg(0) == 1)set @HpPrice, (MaxHp-Hp)*$QW_HP_H_PRICE;
	if(getarg(1) == 1)set @SpPrice, (MaxSp-Sp)*$QW_HP_S_PRICE;
	set @healfee, @HpPrice+@SpPrice;
	if (getarg(0) == 1)&&(getarg(1) == 1)&&(Zeny<@healfee) goto Zeny_Short_Both;
	if (getarg(0) == 1)&&(Zeny<@healfee) goto Zeny_short_HP;
	if (getarg(1) == 1)&&(Zeny<@healfee) goto Zeny_short_SP;
	Zeny -= @healfee;
	if (getarg(0) == 1)&&(getarg(1) == 1) percentheal 100,100;
	if (getarg(0) == 1) percentheal 100,0;
	if (getarg(1) == 1) percentheal 0,100;
	close;
	end;

Zeny_Short_Both:
	mes "[Quest Warper]";
	mes "Choose another option, you can afford both.";
	mes "I can heal as much as you can afford, too.";
	if (select("OK","Exit") == 2) goto L_End;
	goto PHeal;

Zeny_short_HP:
	mes "[Quest Warper]";
	mes "Do you want me to partly heal your HP?";
	if (select("Yes","No") == 2) goto L_End;
	set @Hp, Zeny/$QW_HP_H_PRICE;
	set @HpPrice, @Hp*$QW_HP_H_PRICE;
	if (@Hp == 1) mes "You're not worth the effort.";
	if (@Hp == 1) goto L_End;
	Zeny -= @HpPrice;
	heal @Hp,0;
	close;
	end;

Zeny_short_SP:
	mes "[Quest Warper]";
	mes "Do you want me to partly heal your SP?";
	if (select("Yes","No") == 2) goto L_End;
	set @Sp, Zeny/$QW_HP_S_PRICE;
	set @SpPrice, @Sp*$QW_HP_S_PRICE;
	if (@Sp == 1) mes "You're not worth the effort.";
	if (@Sp == 1) goto L_End;
	Zeny -= @SpPrice;
	heal 0,@Sp;
	close;
	end;

//=============================Storage=============================

L_Storage:
	next;
	if(basicskillcheck() > 0 && getskilllv("NV_BASIC") < 6) goto L_StorageJBlow;
	set @fee, $QW_S_PRICE;
	if ($QW_S_PRICE == 60)&&(BaseJob == Job_Novice) set @fee, 30;
	if ($QW_S_PRICE == 60)&&(BaseJob != Job_Novice) set @fee, 60;
	if(Zeny<@fee) callsub L_Short_on_zeny,2;
	Zeny -= @fee;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + (@fee/5);

	mes "[Quest Warper]";
	if(#kafra_code) {
		mes "Enter your storage password:";
		set @code_,0;
		input(@code_, 0);
		if(@code_ != #kafra_code) {
			dispbottom "Wrong storage password.";
			close;
		}
		set @kafcode_try,0;
		set @code_,0;
	}
	mes "Close this window and I will open your storage.";
	close2;
	openstorage;
	end;

L_StorageJBlow:
	mes "[Quest Warper]";
	mes "I am sorry but you have to be at least Novice level 6 if you want to use the storage.";
	return;

L_GStorage:
	if (!@GID) {
		next;
		mes "[Quest Warper]";
		mes "You are not a part of a guild I can't help you.";
		close;
		end;
	}
	if (Zeny<$QW_GS_PRICE) callsub L_Short_on_zeny,3;
	Zeny -= $QW_GS_PRICE;
	if ($QW_KPoint == 1) set RESRVPTS, RESRVPTS + ($QW_GS_PRICE/5);
	next;
	mes "[Quest Warper]";
	mes "Close this window and I will open the ^5533FF" + getguildinfo(GUILDINFO_NAME, @GID) + "^000000 storage.";
	close2;
	guildopenstorage;
	end;

L_End:
	close;
	end;

//============================Few=Warp=============================
L_FewWarps:
	next;
	mes "[Quest Warper]";
	mes "Você precisa desbloquear os locais para eles fiquem disponíveis a você.";
	mes "Para desbloquear um local fale com os meus auxiliares dentro da masmorra/caverna.";
	mes "Para mapas que é necessário uma quest você deve fazer elas primeiro e depois encontrar minha auxiliar no mapa.";
	mes "Quer que eu verifique quais mapas estão disponíveis pra você?";
	if (select("Sim","Não")==1) callsub stampcard;
	close;
	end;

//============================No=Unlock============================
L_NoUnlock:
	next;
	mes "[Quest Warper]";
	mes "Para desbloquear esse local, você deve encontrar a minha assistente dentro da masmorra.";
	close;
	end;

//=========================Short=On=Zeny===========================
L_Short_on_zeny:
	next;
	switch(getarg(0)) {
	case 0: mes "You don't seem to have "+@pTprice[@Tmenuref[@TWMenu-1]]+" zeny to pay for the warp to "+@pTmenuitems$[@Tmenuref[@TWMenu-1]]+"."; break;
	case 1: mes "You don't seem to have "+@warpprice+" zeny to pay for the warp to "+@DLevelName$[@DWLmenuref[@DWLMenu-1]]+" at "+@pDmenuitems$[@Dmenuref[@DWMenu-1]]+"."; break;
	case 2: mes "You don't seem to have "+@fee+" zeny to pay the storage fee."; break;
	case 3: mes "You don't seem to have "+$QW_GS_PRICE+" zeny to pay the guild storage fee."; break;
	case 4: mes "You don't seem to have "+@healfee+" zeny to pay for your healing."; break;
	}
	close;
	end;

//===========================Stamp=Card============================
stampcard:
// Counting of the ammount of places you have unlocked
	//next;
	//mes "Let me check what Towns you have.";
	//callfunc "QWS_TownStamps";
	//mes "You collected^00FF00 "+@Tstamp+" of "+@MaxTstamp+" ^000000Towns.";
	//if (@Tstamp == 15) mes "They say there is an island you can only get to when married...";
	//if (@Tstamp == 15) emotion 18;
	next;
	mes "Vou verificar quantas masmorras você liberou.";
	callfunc "QWS_DungeonStamps";
	mes "Você já registrou^00FF00 "+@Dstamp+" de "+@MaxDstamp+" ^000000Masmorras.";
	mes "Para desbloquear uma masmorra, procure minhas auxiliares dentro da masmorra.";
	mes "Normalmente você pode encontra-los perto do meio ou no final delas.";
	return;
}

function	script	QWS_TownStamps	{
	set @Tstamp,0;
	set @MaxTstamp,30; //maximum number of towns
	set @binvalue,1;
	set @Tstamploop,0;
	do {
		if ((@binvalue & ##QWS_T_Unlock) == @binvalue) set @Tstamp,@Tstamp+1;
		set @binvalue, @binvalue *2;
		set @Tstamploop, @Tstamploop + 1;
	} while (@Tstamploop < @MaxTstamp);
	return;
}

function	script	QWS_DungeonStamps	{
	set @Dstamp,0;
	set @MaxDstamp,29; //maximum number of dungeons
	set @binvalue,1;
	set @Dstamploop,0;
	do {
		if ((@binvalue & ##QWS_D_Unlock) == @binvalue) set @Dstamp,@Dstamp+1;
		set @binvalue, @binvalue *2;
		set @Dstamploop, @Dstamploop + 1;
	} while (@Dstamploop < @MaxDstamp);
	return;
}

//======================Main=Menu=Array============================

function	script	QWS_MMarray	{

	// Currently 9 items
	setarray @pMmenuitems$[0], "GameMaster Menu", $QW_SP_Warpname$, "Cidades", "Cavernas", "Por que não tem warps?", "Why don't you unlock this location?", "Heal", "Heal", "Storage", "Guild Storage", "Cancelar";
	set @Mi,0; // loop counter
	set @Mj,0; // menu line counter

//----------------GameMaster-Menu
	if (getgmlevel()>= 80) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Special-Warp
	callfunc "QWS_TownStamps";
	callfunc "QWS_DungeonStamps";
	if (@Tstamp == @MaxTstamp)&&(@Dstamp == @MaxDstamp)&&($QW_SP_WarpMap$ != "") {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Town-Warp
	if ($QW_TW_OFF == 0) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Dungeon-Warp
	if ($QW_DW_OFF == 0) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Why-So-Few-Warps
	set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
	set @Mmenuref[@Mj],@Mi;
	set @Mj,@Mj+1;
	set @Mi,@Mi+1;
//----------------No-Unlock
	if (getarg(0) == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Healfull
	if ($QW_HF == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Healpart
	if ($QW_HP == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Storage
	if ($QW_Stor == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------GuildStorage
	if ($QW_GStor == 1) {
		set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
		set @Mmenuref[@Mj],@Mi;
		set @Mj,@Mj+1;
	}
	set @Mi,@Mi+1;
//----------------Cancel
	set @Mmenulist$[@Mj],@pMmenuitems$[@Mi];
	set @Mmenuref[@Mj],@Mi;
	return;
}

//======================Town=Menu=Array============================
// Adding a town:
//	setarray @pTmenuitems$[@Ti], "Prontera";// Name of Town shown in Town select Menu
//	setarray @pTprice[@Ti], $QW_BW_PRICE;	// Warp prices: Basic ($QW_BW_PRICE), Advanced ($QW_AW_PRICE), Overseas ($QW_OW_PRICE)
//
//	setarray @pTmap$[@Ti], "prontera";	// Map name
//	setarray @pTXcoords[@Ti], 156;		// X warp coords
//	setarray @pTYcoords[@Ti], 187;		// Y warp coords
//
//	QWS_Make_Town_Menu 0;	// Use a free number (last used is 30, Eclage)
//
// Adding a warpra:
//	map,x,y,facing	script	Teleportadora#example	1_F_ORIENT_02,{
//		callfunc "QWS_Town_Teleportadora",<town number>,"Your Town";
//		close;
//	}
//	Town number is the same as "QWS_Make_Town_Menu".
//==================================================================

function	script	QWS_Tarray	{
	function QWS_Make_Town_Menu;

	set @Ti,0; // loop counter
	set @Tj,0; // menu lines counter

//----------------Prontera
	setarray @pTmenuitems$[@Ti], "Prontera";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "prontera";
	setarray @pTXcoords[@Ti], 156;
	setarray @pTYcoords[@Ti], 187;

	QWS_Make_Town_Menu 0;
//----------------Alberta
	setarray @pTmenuitems$[@Ti], "Alberta";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "alberta";
	setarray @pTXcoords[@Ti], 27;
	setarray @pTYcoords[@Ti], 236;

	QWS_Make_Town_Menu 1;
//----------------Aldebaran
	setarray @pTmenuitems$[@Ti], "Aldebaran";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "aldebaran";
	setarray @pTXcoords[@Ti], 145;
	setarray @pTYcoords[@Ti], 120;

	QWS_Make_Town_Menu 2;
//----------------Amatsu:
	setarray @pTmenuitems$[@Ti], "Amatsu";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "amatsu";
	setarray @pTXcoords[@Ti], 197;
	setarray @pTYcoords[@Ti], 86;

	QWS_Make_Town_Menu 3;
//----------------Ayothaya:
	setarray @pTmenuitems$[@Ti], "Ayothaya";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "ayothaya";
	setarray @pTXcoords[@Ti], 150;
	setarray @pTYcoords[@Ti], 57;

	QWS_Make_Town_Menu 4;
//----------------Brasilis:
	setarray @pTmenuitems$[@Ti], "Brasilis";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "brasilis";
	setarray @pTXcoords[@Ti], 195;
	setarray @pTYcoords[@Ti], 220;

	QWS_Make_Town_Menu 21;
//----------------Comodo:
	setarray @pTmenuitems$[@Ti], "Comodo";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "comodo";
	setarray @pTXcoords[@Ti], 188;
	setarray @pTYcoords[@Ti], 161;

	QWS_Make_Town_Menu 5;
//----------------Dewata:
	setarray @pTmenuitems$[@Ti], "Dewata";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "dewata";
	setarray @pTXcoords[@Ti], 199;
	setarray @pTYcoords[@Ti], 179;

	QWS_Make_Town_Menu 29;
//----------------Eclage:
	setarray @pTmenuitems$[@Ti], "Eclage";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "eclage";
	setarray @pTXcoords[@Ti], 111;
	setarray @pTYcoords[@Ti], 39;

	QWS_Make_Town_Menu 30;
//----------------Einbech:
	setarray @pTmenuitems$[@Ti], "Einbech";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "einbech";
	setarray @pTXcoords[@Ti], 172;
	setarray @pTYcoords[@Ti], 126;

	QWS_Make_Town_Menu 6;
//----------------Einbroch:
	setarray @pTmenuitems$[@Ti], "Einbroch";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "einbroch";
	setarray @pTXcoords[@Ti], 230;
	setarray @pTYcoords[@Ti], 191;

	QWS_Make_Town_Menu 7;
//----------------El Dicastes:
	setarray @pTmenuitems$[@Ti], "El Dicastes";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "dicastes01";
	setarray @pTXcoords[@Ti], 197;
	setarray @pTYcoords[@Ti], 187;

	QWS_Make_Town_Menu 22;
//----------------Geffen:
	setarray @pTmenuitems$[@Ti], "Geffen";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "geffen";
	setarray @pTXcoords[@Ti], 119;
	setarray @pTYcoords[@Ti], 66;

	QWS_Make_Town_Menu 8;
//----------------Gonryun:
	setarray @pTmenuitems$[@Ti], "Gonryun";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "gonryun";
	setarray @pTXcoords[@Ti], 150;
	setarray @pTYcoords[@Ti], 130;

	QWS_Make_Town_Menu 9;
//----------------Hugel:
	setarray @pTmenuitems$[@Ti], "Hugel";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "hugel";
	setarray @pTXcoords[@Ti], 95;
	setarray @pTYcoords[@Ti], 121;

	QWS_Make_Town_Menu 10;
//----------------Izlude:
	setarray @pTmenuitems$[@Ti], "Izlude";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "izlude";
	setarray @pTXcoords[@Ti], 128;
	setarray @pTYcoords[@Ti], 111;

	QWS_Make_Town_Menu 11;
//----------------Jawaii:
	setarray @pTmenuitems$[@Ti], "Jawaii";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "jawaii";
	setarray @pTXcoords[@Ti], 243;
	setarray @pTYcoords[@Ti], 115;

	QWS_Make_Town_Menu 12;
//----------------Lighthalzen:
	setarray @pTmenuitems$[@Ti], "Lighthalzen";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "lighthalzen";
	setarray @pTXcoords[@Ti], 158;
	setarray @pTYcoords[@Ti], 110;

	QWS_Make_Town_Menu 13;
//----------------Louyang:
	setarray @pTmenuitems$[@Ti], "Louyang";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "louyang";
	setarray @pTXcoords[@Ti], 210;
	setarray @pTYcoords[@Ti], 108;

	QWS_Make_Town_Menu 14;
//----------------Lutie
	setarray @pTmenuitems$[@Ti], "Lutie";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "xmas";
	setarray @pTXcoords[@Ti], 148;
	setarray @pTYcoords[@Ti], 131;

	QWS_Make_Town_Menu 15;
//----------------Manuk
	setarray @pTmenuitems$[@Ti], "Manuk";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "manuk";
	setarray @pTXcoords[@Ti], 260;
	setarray @pTYcoords[@Ti], 175;

	QWS_Make_Town_Menu 23;
//----------------Mora
	setarray @pTmenuitems$[@Ti], "Mora";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "mora";
	setarray @pTXcoords[@Ti], 111;
	setarray @pTYcoords[@Ti], 97;

	QWS_Make_Town_Menu 24;
//----------------Morroc:
	setarray @pTmenuitems$[@Ti], "Morroc";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "morocc";
	setarray @pTXcoords[@Ti], 159;
	setarray @pTYcoords[@Ti], 93;

	QWS_Make_Town_Menu 16;
//----------------Moscovia
	setarray @pTmenuitems$[@Ti], "Moscovia";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "moscovia";
	setarray @pTXcoords[@Ti], 219;
	setarray @pTYcoords[@Ti], 193;

	QWS_Make_Town_Menu 25;
//----------------Niflheim:
	setarray @pTmenuitems$[@Ti], "Niflheim";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "niflheim";
	setarray @pTXcoords[@Ti], 195;
	setarray @pTYcoords[@Ti], 186;

	QWS_Make_Town_Menu 17;
//----------------Payon:
	setarray @pTmenuitems$[@Ti], "Payon";
	setarray @pTprice[@Ti], $QW_BW_PRICE;

	setarray @pTmap$[@Ti], "payon";
	setarray @pTXcoords[@Ti], 152;
	setarray @pTYcoords[@Ti], 75;

	QWS_Make_Town_Menu 18;
//----------------Rachel
	setarray @pTmenuitems$[@Ti], "Rachel";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "rachel";
	setarray @pTXcoords[@Ti], 130;
	setarray @pTYcoords[@Ti], 111;

	QWS_Make_Town_Menu 26;
//----------------Splendide
	setarray @pTmenuitems$[@Ti], "Splendide";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "splendide";
	setarray @pTXcoords[@Ti], 200;
	setarray @pTYcoords[@Ti], 153;

	QWS_Make_Town_Menu 27;
//----------------Umbala:
	setarray @pTmenuitems$[@Ti], "Umbala";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "umbala";
	setarray @pTXcoords[@Ti], 130;
	setarray @pTYcoords[@Ti], 130;

	QWS_Make_Town_Menu 19;
//----------------Veins
	setarray @pTmenuitems$[@Ti], "Veins";
	setarray @pTprice[@Ti], $QW_OW_PRICE;

	setarray @pTmap$[@Ti], "veins";
	setarray @pTXcoords[@Ti], 216;
	setarray @pTYcoords[@Ti], 123;

	QWS_Make_Town_Menu 28;
//----------------Yuno:
	setarray @pTmenuitems$[@Ti], "Yuno";
	setarray @pTprice[@Ti], $QW_AW_PRICE;

	setarray @pTmap$[@Ti], "yuno";
	setarray @pTXcoords[@Ti], 160;
	setarray @pTYcoords[@Ti], 168;

	QWS_Make_Town_Menu 20;
//----------------Cancel
	setarray @pTmenuitems$[@Ti], "Cancelar";
	setarray @pTprice[@Ti], 0;

	set @Tmenulist$[@Tj],@pTmenuitems$[@Ti];
	set @Tmenuref[@Tj],57005; // 57005='dead' in hex
	return;

//----------------Make Town Menu Function

function	QWS_Make_Town_Menu	{
	set @temptownmenubin,1;
	if (getarg(0) == 0) goto menu_item;
	set @templooptownmenu,0;
	do {
		set @temptownmenubin, @temptownmenubin * 2;
		set @templooptownmenu, @templooptownmenu + 1;
		}while (getarg(0) > @templooptownmenu);
// check marker and make menu item
menu_item:
	if ((@temptownmenubin & ##QWS_T_Unlock) != @temptownmenubin) {
		set @Ti,@Ti+1;
		return;
	}
	if (@pTprice[@Ti] != 0)&&($QW_MapUserShow == 0) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" -> "+@pTprice[@Ti];
	if (@pTprice[@Ti] == 0)&&($QW_MapUserShow == 0) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti];
	if (@pTprice[@Ti] != 0)&&($QW_MapUserShow == 1) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" ["+getmapusers(@pTmap$[@Ti])+"]"+" -> "+@pTprice[@Ti];
	if (@pTprice[@Ti] == 0)&&($QW_MapUserShow == 1) set @Tmenulist$[@Tj], @pTmenuitems$[@Ti]+" ["+getmapusers(@pTmap$[@Ti])+"]";
	set @Tmenuref[@Tj],@Ti;
	set @Tj,@Tj+1;
	set @Ti,@Ti+1;
	return;
}
}

//====================Dungeon=Menu=Arrays==========================
// Adding a dungeon:
//	setarray @pDmenuitems$[@Di], "Abyss Lake";	// Name of Dungeon shown in Dungeon select Menu
//	setarray @pDprice[@Di], $QW_AW_PRICE;		// Warp prices: Basic ($QW_BW_PRICE), Advanced ($QW_AW_PRICE), Overseas ($QW_OW_PRICE)
//	setarray @pDfee$[@Di], "$QW_AW_FEE";		// Identifier for fee caluclation: Basic ("$QW_BW_FEE"), Advanced ("$QW_AW_FEE"), Overseas ("$QW_OW_FEE")
//	setarray @DLevels[@Di], 3;			// Number of levels in dungeon
//
//	setarray @DGat$[@Dref], "abyss_01", "abyss_02", "abyss_03";	// Map names of dungeon levels
//	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";	// Name of dungeon levels shown in Menu
//	setarray @DXcoords[@Dref], 265, 275, 116;			// X warp coords
//	setarray @DYcoords[@Dref], 273, 270, 27;			// Y warp coords
//	setarray @DDepth[@Dref], 0, 1, 2;				// Relative depth to entrance, to calculate extra warp fee
//
//	QWS_Make_Dungeon_Menu 0;	// Use a free number (last used is 28, Kiel Dungeon)
//
// Adding a warpra:
//	map,x,y,facing	script	Registro de Caverna#example	4_M_ZONDAOYAJI,{
//		callfunc "QWS_Dungeon_Teleportadora",<dungeon number>,"Your Dungeon";
//		close;
//	}
//	Dungeon number is the same as "QWS_Make_Dungeon_Menu".
//==================================================================

function	script	QWS_Darray	{
	function QWS_Make_Dungeon_Menu;

	set @Di,0;
	set @Dj,0;
	set @Dref,0;

//----------------ABYSS LAKE
	setarray @pDmenuitems$[@Di], "Lago do Abismo";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "abyss_01", "abyss_02", "abyss_03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 265, 275, 116;
	setarray @DYcoords[@Dref], 273, 270, 27;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 0;

//----------------AMATSU DUNGEON
	setarray @pDmenuitems$[@Di], "Labirinto dos Tatames";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "ama_dun01", "ama_dun02", "ama_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 227, 32, 119;
	setarray @DYcoords[@Dref], 10, 43, 15;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 1;

//----------------ANT HELL
	setarray @pDmenuitems$[@Di], "Formigueiro Infernal";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[2], 2;

	setarray @DGat$[@Dref], "anthell01", "anthell02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 32, 34;
	setarray @DYcoords[@Dref], 262, 263;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 2;

//----------------AYOTAYA
	setarray @pDmenuitems$[@Di], "Labirinto do Santuário Ancestral";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[3], 2;

	setarray @DGat$[@Dref], "ayo_dun01", "ayo_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 275, 150;
	setarray @DYcoords[@Dref], 17, 13;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 3;

//----------------BYALAN
	setarray @pDmenuitems$[@Di], "Túnel Submarino";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[4], 5;

	setarray @DGat$[@Dref], "iz_dun00", "iz_dun01", "iz_dun02", "iz_dun03", "iz_dun04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 168, 41, 236, 32, 26;
	setarray @DYcoords[@Dref], 168, 37, 204, 63, 27;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	QWS_Make_Dungeon_Menu 4;

//----------------CLOCK TOWER
	setarray @pDmenuitems$[@Di], "Torre do Relógio";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[5], 8;

	setarray @DGat$[@Dref], "c_tower1", "c_tower2", "c_tower3", "c_tower4", "alde_dun01", "alde_dun02", "alde_dun03", "alde_dun04";
	setarray @DLevelName$[@Dref], "Clock Tower Level 1", "Clock Tower Level 2", "Clock Tower Level 3", "Clock Tower Level 4", "Basement 1F", "Basement 2F", "Basement 3F", "Basement 4F";
	setarray @DXcoords[@Dref], 200, 268, 64, 32, 197, 262, 276, 122;
	setarray @DYcoords[@Dref], 163, 26, 148, 63, 25, 41, 53, 125;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 1, 2, 3, 4;

	QWS_Make_Dungeon_Menu 5;

//----------------COAL MINE
	setarray @pDmenuitems$[@Di], "Mina Abandonada de Mjolnir";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[6], 3;

	setarray @DGat$[@Dref], "mjo_dun01", "mjo_dun02", "mjo_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 52, 381, 302;
	setarray @DYcoords[@Dref], 17, 343, 261;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 6;

//----------------CULVERT
	setarray @pDmenuitems$[@Di], "Esgoto de Prontera";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[7], 4;

	setarray @DGat$[@Dref], "prt_sewb1", "prt_sewb2", "prt_sewb3", "prt_sewb4";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 132, 19, 180, 100;
	setarray @DYcoords[@Dref], 248, 19, 169, 92;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	QWS_Make_Dungeon_Menu 7;

//----------------EINBECH DUNGEON
	setarray @pDmenuitems$[@Di], "Calabouço da Mina";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[8], 2;

	setarray @DGat$[@Dref], "ein_dun01", "ein_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 22, 292;
	setarray @DYcoords[@Dref], 14, 290;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 8;

//----------------GEFENIA DUNGEON
	setarray @pDmenuitems$[@Di], "Gefenia";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[9], 4;

	setarray @DGat$[@Dref], "gefenia01", "gefenia02", "gefenia03", "gefenia04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 59, 201, 264, 33;
	setarray @DYcoords[@Dref], 167, 35, 236, 270;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	QWS_Make_Dungeon_Menu 9;

//----------------GEFFEN DUNGEON
	setarray @pDmenuitems$[@Di], "Calabouço de Geffen";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 4;

	setarray @DGat$[@Dref], "gef_dun00", "gef_dun01", "gef_dun02", "gef_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4";
	setarray @DXcoords[@Dref], 104, 115, 106, 203;
	setarray @DYcoords[@Dref], 100, 236, 132, 200;
	setarray @DDepth[@Dref], 0, 1, 2, 3;

	QWS_Make_Dungeon_Menu 10;

//----------------GLAST HEIM
	setarray @pDmenuitems$[@Di], "Glast Heim Entrada";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 17;

	setarray @DGat$[@Dref], "glast_01", "gl_church", "gl_chyard", "gl_in01", "gl_cas01", "gl_cas02", "gl_knt01", "gl_knt02", "gl_prison", "gl_prison1", "gl_step", "gl_sew01", "gl_sew02", "gl_sew03", "gl_sew04", "gl_dun01", "gl_dun02";
	setarray @DLevelName$[@Dref], "Glast Heim Entrance", "St. Abbey", "Churchyard", "Inside Glast Heim", "Castle 1", "Castle 2", "Chivalry 1", "Chivalry 2", "Prison 1", "Prison 2", "Steps", "Sewers 1", "Sewers 2", "Sewers 3", "Sewers 4", "Lowest Cave 1", "Lowest Cave 2";
	setarray @DXcoords[@Dref], 370, 156, 147, 121, 199, 104, 150, 157, 14, 150, 117, 258, 108, 171, 68, 133, 224;
	setarray @DYcoords[@Dref], 300, 8, 15, 59, 29, 25, 10, 287, 70, 14, 124, 255, 291, 273, 277, 271, 274;
	setarray @DDepth[@Dref], 0, 1, 2, 1, 1, 2, 1, 2, 2, 3, 1, 4, 2, 3, 4, 5, 6;

	QWS_Make_Dungeon_Menu 11;

//----------------GONRYUN DUNGEON
	setarray @pDmenuitems$[@Di], "Santuário de Xi Wang Mu";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "gon_dun01", "gon_dun02", "gon_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 143, 17, 68;
	setarray @DYcoords[@Dref], 59, 114, 9;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 12;

//----------------HIDDEN DUNGEON
	setarray @pDmenuitems$[@Di], "Labirinto da Floresta";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "prt_maze01", "prt_maze02", "prt_maze03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 176, 94, 23;
	setarray @DYcoords[@Dref], 6, 19, 8;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 13;

//----------------JUPEROS CAVE
	setarray @pDmenuitems$[@Di], "Ruínas de Juperos";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "juperos_01", "juperos_02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 53, 36;
	setarray @DYcoords[@Dref], 247, 60;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 14;

//----------------KIEL DUNGEON
	setarray @pDmenuitems$[@Di], "Fábrica de Rôbos";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "kh_dun01", "kh_dun02";
	setarray @DLevelName$[@Dref], "1st Floor", "2nd Floor";
	setarray @DXcoords[@Dref], 63, 42;
	setarray @DYcoords[@Dref], 10, 197;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 28;

//----------------LIGHTHALZEN BIO LAB
	setarray @pDmenuitems$[@Di], "Laboratório de Somatologia";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "lhz_dun01", "lhz_dun02", "lhz_dun03";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 150, 150, 140;
	setarray @DYcoords[@Dref], 287, 18, 137;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 15;

//----------------LOUYANG DUNGEON
	setarray @pDmenuitems$[@Di], "Tumba de Louyang";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "lou_dun02", "lou_dun03";
	setarray @DLevelName$[@Dref], "Royal Tomb Level 1", "Royal Tomb Level 2";
	setarray @DXcoords[@Dref], 282, 165;
	setarray @DYcoords[@Dref], 20, 38;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 16;

//----------------MAGMA DUNGEON
	setarray @pDmenuitems$[@Di], "Calabouço de Magma";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "mag_dun01", "mag_dun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 126, 47;
	setarray @DYcoords[@Dref], 69, 32;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 17;

//----------------ODIN TEMPLE
	setarray @pDmenuitems$[@Di], "Templo de Odin";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 1;

	setarray @DGat$[@Dref], "odin_tem01";
	setarray @DLevelName$[@Dref], "Level 1";
	setarray @DXcoords[@Dref], 96;
	setarray @DYcoords[@Dref], 145;
	setarray @DDepth[@Dref], 0;

	QWS_Make_Dungeon_Menu 18;

//----------------ORC DUNGEON
	setarray @pDmenuitems$[@Di], "Calabouço dos Orcs";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "orcsdun01", "orcsdun02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 32, 21;
	setarray @DYcoords[@Dref], 169, 185;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 19;

//----------------PAYON DUNGEON
	setarray @pDmenuitems$[@Di], "Caverna de Payon";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 5;

	setarray @DGat$[@Dref], "pay_dun00", "pay_dun01", "pay_dun02", "pay_dun03", "pay_dun04";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 22, 19, 19, 155, 201;
	setarray @DYcoords[@Dref], 180, 33, 63, 159, 204;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	QWS_Make_Dungeon_Menu 20;

//----------------PYRAMIDS
	setarray @pDmenuitems$[@Di], "Pirâmide";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 6;

	setarray @DGat$[@Dref], "moc_pryd01", "moc_pryd02", "moc_pryd03", "moc_pryd04", "moc_pryd05", "moc_pryd06";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Basement 1", "Basement 2";
	setarray @DXcoords[@Dref], 192, 10, 100, 181, 94, 192;
	setarray @DYcoords[@Dref], 9, 192, 92, 11, 96, 8;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 1, 2;

	QWS_Make_Dungeon_Menu 21;

//----------------SPHINX
	setarray @pDmenuitems$[@Di], "Esfinge";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 5;

	setarray @DGat$[@Dref], "in_sphinx1", "in_sphinx2", "in_sphinx3", "in_sphinx4", "in_sphinx5";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5";
	setarray @DXcoords[@Dref], 192, 149, 210, 10, 100;
	setarray @DYcoords[@Dref], 9, 81, 54, 222, 99;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4;

	QWS_Make_Dungeon_Menu 22;

//----------------SUNKEN SHIP
	setarray @pDmenuitems$[@Di], "Navio Fantasma";
	setarray @pDprice[@Di], $QW_BW_PRICE;
	setarray @pDfee$[@Di], "$QW_BW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "treasure01", "treasure02";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2";
	setarray @DXcoords[@Dref], 69, 102;
	setarray @DYcoords[@Dref], 24, 27;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 23;

//----------------THANATOS TOWER
	setarray @pDmenuitems$[@Di], "Torre de Thanatos";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 13;

	setarray @DGat$[@Dref], "tha_t01", "tha_t02", "tha_t03", "tha_t04", "tha_t05", "tha_t06", "tha_t07", "tha_t08", "tha_t09", "tha_t10", "tha_t11", "tha_t12", "thana_boss";
	setarray @DLevelName$[@Dref], "Level 1", "Level 2", "Level 3", "Level 4", "Level 5", "Level 6", "Level 7", "Level 8", "Level 9", "Level 10", "Level 11", "Level 12", "Thanatos Boss";
	setarray @DXcoords[@Dref], 150, 150, 220, 59, 62, 206, 35, 105, 88, 168, 90, 129, 85;
	setarray @DYcoords[@Dref], 35, 136, 158, 143, 11, 8, 166, 44, 145, 138, 36, 83, 76;
	setarray @DDepth[@Dref], 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12;

	QWS_Make_Dungeon_Menu 24;

//----------------TOY FACTORY
	setarray @pDmenuitems$[@Di], "Fábrica de Brinquedos";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 2;

	setarray @DGat$[@Dref], "xmas_dun01", "xmas_dun02";
	setarray @DLevelName$[@Dref], "Factory Warehouse", "Classifying Room";
	setarray @DXcoords[@Dref], 205, 129;
	setarray @DYcoords[@Dref], 16, 133;
	setarray @DDepth[@Dref], 0, 1;

	QWS_Make_Dungeon_Menu 25;

//----------------TURTLE ISTLAND
	setarray @pDmenuitems$[@Di], "Ilha da Tartaruga";
	setarray @pDprice[@Di], $QW_AW_PRICE;
	setarray @pDfee$[@Di], "$QW_AW_FEE";
	setarray @DLevels[@Di], 4;

	setarray @DGat$[@Dref], "tur_dun01", "tur_dun02", "tur_dun03", "tur_dun04";
	setarray @DLevelName$[@Dref], "Outside", "Level 1", "Level 2", "Level 3";
	setarray @DXcoords[@Dref], 161, 148, 132, 100;
	setarray @DYcoords[@Dref], 34, 256, 190, 192;
	setarray @DDepth[@Dref], 0, 0, 1, 2;

	QWS_Make_Dungeon_Menu 26;

//----------------UMBALA
	setarray @pDmenuitems$[@Di], "Caverna de Umbala";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 3;

	setarray @DGat$[@Dref], "um_dun01", "um_dun02", "yggdrasil01";
	setarray @DLevelName$[@Dref], "Carpenter's Shop in The Tree", "Passage to a Foreign World", "Hvergelmir's Fountain";
	setarray @DXcoords[@Dref], 205, 48, 40;
	setarray @DYcoords[@Dref], 26, 30, 63;
	setarray @DDepth[@Dref], 0, 1, 2;

	QWS_Make_Dungeon_Menu 27;

//----------------BEACH DUNGEON (Ragnaberry)
	setarray @pDmenuitems$[@Di], "Mao - Caverna Leste";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 1;

	setarray @DGat$[@Dref], "beach_dun3";
	setarray @DLevelName$[@Dref], "Mao - Caverna Leste";
	setarray @DXcoords[@Dref], 23;
	setarray @DYcoords[@Dref], 260;
	setarray @DDepth[@Dref], 0;

	QWS_Make_Dungeon_Menu 29;
	
//----------------BEACH DUNGEON (Ragnaberry)
	setarray @pDmenuitems$[@Di], "Luanda - a Caverna Norte";
	setarray @pDprice[@Di], $QW_OW_PRICE;
	setarray @pDfee$[@Di], "$QW_OW_FEE";
	setarray @DLevels[@Di], 1;

	setarray @DGat$[@Dref], "beach_dun2";
	setarray @DLevelName$[@Dref], "Luanda - a Caverna Leste";
	setarray @DXcoords[@Dref], 154;
	setarray @DYcoords[@Dref], 25;
	setarray @DDepth[@Dref], 0;

	QWS_Make_Dungeon_Menu 30;
	
//----------------BEACH DUNGEON (Ragnaberry)
//	setarray @pDmenuitems$[@Di], "Karu - a Caverna Oeste";
//	setarray @pDprice[@Di], $QW_OW_PRICE;
//	setarray @pDfee$[@Di], "$QW_OW_FEE";
//	setarray @DLevels[@Di], 1;
//
//	setarray @DGat$[@Dref], "beach_dun";
//	setarray @DLevelName$[@Dref], "Karu - a Caverna Oeste";
//	setarray @DXcoords[@Dref], 266;
//	setarray @DYcoords[@Dref], 67;
//	setarray @DDepth[@Dref], 0;
//
//	QWS_Make_Dungeon_Menu 31;

//----------------Cancel
	setarray @pDmenuitems$[@Di], "Cancelar";
	setarray @pDprice[@Di], 0;

	set @Dmenulist$[@Dj],@pDmenuitems$[@Di];
	set @Dmenuref[@Dj],57005; // 57005='dead' in hex
	return;

//----------------Make Dungeon Menu Function

function	QWS_Make_Dungeon_Menu	{
	set @tempdungeonmenubin,1;
	if (getarg(0) == 0) goto menu_item;
	set @temploopdungeonmenu,0;
	do {
		set @tempdungeonmenubin, @tempdungeonmenubin * 2;
		set @temploopdungeonmenu, @temploopdungeonmenu + 1;
		}while (getarg(0) > @temploopdungeonmenu);
// check marker and make menu item
menu_item:
	if ((@tempdungeonmenubin & ##QWS_D_Unlock) != @tempdungeonmenubin) {
		setarray @DLocRef[@Di], @Dref;
		set @Dref, @Dref+@DLevels[@Di];
		set @Di,@Di+1;
		return;
	}
	if ($QW_MapUserShow == 1) {
		set @tempmapusers,0;
		set @mapusersloop,0;
		do {
			set @tempmapusers,(getmapusers(@DGat$[@Dref+@mapusersloop]) + @tempmapusers);
			set @mapusersloop, (@mapusersloop + 1);
		} while (@DLevels[@Di] > @mapusersloop);
		if (@pDprice[@Di] != 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" ["+@tempmapusers+"] -> "+@pDprice[@Di];
		if (@pDprice[@Di] == 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" ["+@tempmapusers+"]";
		set @Dmenuref[@Dj],@Di;
		set @Dj,@Dj+1;
		setarray @DLocRef[@Di], @Dref;
		set @Dref, @Dref+@DLevels[@Di];
		set @Di,@Di+1;
		return;
	}
	if (@pDprice[@Di] != 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di]+" -> "+@pDprice[@Di];
	if (@pDprice[@Di] == 0) set @Dmenulist$[@Dj], @pDmenuitems$[@Di];
	set @Dmenuref[@Dj],@Di;
	set @Dj,@Dj+1;
	setarray @DLocRef[@Di], @Dref;
	set @Dref, @Dref+@DLevels[@Di];
	set @Di,@Di+1;
	return;
}
}

function	script	QWS_DLarray	{
//----------------Start building Menu
	set @DWref,@DLocRef[@DwarpMenu]; // reference to the arrays with leveldata
	set @DWi,0;  // loop counter
	set @DWj,0; // menu lines counter
	cleararray @DWLmenulist$[0],"",20; // Clearing the array to get rid off ghost items in menu
	do {
		if ($QW_DL == 0)||($QW_DDL >= @DDepth[@DWref]) {
			set @warpprice, (@pDprice[@DwarpMenu]+ (getd(@pDfee$[@DwarpMenu])*@DDepth[@DWref]));
			if (@warpprice != 0)&&($QW_MapUserShow == 0) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" -> "+@warpprice;
			if (@warpprice == 0)&&($QW_MapUserShow == 0) set @DWLmenulist$[@DWj], @DLevelName$[@DWref];
			if (@warpprice != 0)&&($QW_MapUserShow == 1) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" ["+getmapusers(@DGat$[@DWref])+"] -> "+@warpprice;
			if (@warpprice == 0)&&($QW_MapUserShow == 1) set @DWLmenulist$[@DWj], @DLevelName$[@DWref]+" ["+getmapusers(@DGat$[@DWref])+"]";
			set @DWLmenuref[@DWj],@DWref;
			set @DWj,@DWj+1;
		}
		set @DWref, @DWref+1;
		set @DWi,@DWi+1;
	} while (@DWi < @DLevels[@DwarpMenu]);
	set @DWLmenulist$[@DWj], "Exit";
	set @DWLmenuref[@DWj],57005; // 57005='dead' in hex
	return;
}

//================Dungeon=Teleportadoras=That=Only=Unlock=================

function	script	QWS_Dungeon_Teleportadora	{
	function QWS_D_getbin;
	function QWS_D_setbin;

	if ((QWS_D_getbin(getarg(0)) == 0) && (getarg(1) != "")) {
		mes "[Teleportadora]";
		mes getarg(1)+" desbloqueado!";
		QWS_D_setbin(getarg(0));
		return;
	} else if (QWS_D_getbin(getarg(0)) == 1) {
		mes "[Teleportadora]";
		mes "Sorry, I can only unlock this location.";
	} else
		consolemes(CONSOLEMES_ERROR, "QWS_Dungeon_Teleportadora error, improper syntax?");
	return;

function	QWS_D_setbin	{
	set @tempsetbindata,1;
	if (getarg(0) == 0) goto binset;
	set @temploopsetbin,0;
	do {
		set @tempsetbindata, @tempsetbindata * 2;
		set @temploopsetbin, @temploopsetbin + 1;
	} while (getarg(0) > @temploopsetbin);
binset:
	set ##QWS_D_Unlock,(##QWS_D_Unlock | @tempsetbindata);
	return;
}

function	QWS_D_getbin	{
	set @tempgetbindata,1;
	if (getarg(0) == 0) goto binget;
	set @temploopgetbin,0;
	do {
		set @tempgetbindata, @tempgetbindata * 2;
		set @temploopgetbin, @temploopgetbin + 1;
	} while (getarg(0) > @temploopgetbin);
binget:
	if ((@tempgetbindata & ##QWS_D_Unlock) == @tempgetbindata) return 1;
	return 0;
}
}

//==========================Town=Teleportadoras===========================

function	script	QWS_Town_Teleportadora	{
	function QWS_T_getbin;
	function QWS_T_setbin;

	if ((QWS_T_getbin(getarg(0)) == 0) && (getarg(1) != "")) {
		mes "[Teleportadora]";
		mes getarg(1)+" unlocked!";
		QWS_T_setbin(getarg(0));
		return;
	} else if (QWS_T_getbin(getarg(0)) == 1) {
		callfunc "Q_Teleportadora",0;
	} else
		consolemes(CONSOLEMES_ERROR, "QWS_Town_Teleportadora error, improper syntax ?");
	return;

function	QWS_T_setbin	{
	set @tempsetbindata,1;
	if (getarg(0) == 0) goto binset;
	set @temploopsetbin,0;
	do {
		set @tempsetbindata, @tempsetbindata * 2;
		set @temploopsetbin, @temploopsetbin + 1;
	} while (getarg(0) > @temploopsetbin);
binset:
	set ##QWS_T_Unlock,(##QWS_T_Unlock | @tempsetbindata);
	return;
}

function	QWS_T_getbin	{
	set @tempgetbindata,1;
	if (getarg(0) == 0) goto binget;
	set @temploopgetbin,0;
	do {
		set @tempgetbindata, @tempgetbindata * 2;
		set @temploopgetbin, @temploopgetbin + 1;
	} while (getarg(0) > @temploopgetbin);
binget:
	if ((@tempgetbindata & ##QWS_T_Unlock) == @tempgetbindata) return 1;
	return 0;
}
}
//============================Teleportadoras==============================

-	script	Teleportadora#0	FAKE_NPC,{ callfunc "Q_Teleportadora",1; }
alb2trea,73,101,4	duplicate(Teleportadora#0)	Teleportadora#1	1_F_ORIENT_02
ama_fild01,178,325,1	duplicate(Teleportadora#0)	Teleportadora#2	1_F_ORIENT_02
gef_fild10,71,339,4	duplicate(Teleportadora#0)	Teleportadora#3	1_F_ORIENT_02
izlu2dun,104,82,4	duplicate(Teleportadora#0)	Teleportadora#4	1_F_ORIENT_02
mjolnir_02,85,363,4	duplicate(Teleportadora#0)	Teleportadora#5	1_F_ORIENT_02
moc_fild04,207,331,4	duplicate(Teleportadora#0)	Teleportadora#6	1_F_ORIENT_02
moc_fild19,106,97,4	duplicate(Teleportadora#0)	Teleportadora#7	1_F_ORIENT_02
moc_ruins,64,166,4	duplicate(Teleportadora#0)	Teleportadora#8	1_F_ORIENT_02
niflheim,197,192,3	duplicate(Teleportadora#0)	Teleportadora#9	1_F_ORIENT_02
pay_arche,39,135,4	duplicate(Teleportadora#0)	Teleportadora#10	1_F_ORIENT_02
prt_fild05,273,215,4	duplicate(Teleportadora#0)	Teleportadora#11	1_F_ORIENT_02
tur_dun01,148,239,4	duplicate(Teleportadora#0)	Teleportadora#12	1_F_ORIENT_02
valkyrie,48,35,0	duplicate(Teleportadora#0)	Teleportadora#13	1_F_ORIENT_02
yuno_fild03,37,135,4	duplicate(Teleportadora#0)	Teleportadora#14	1_F_ORIENT_02
vip_lounge,140,228,4	duplicate(Teleportadora#0)	Teleportadora#46	1_F_ORIENT_02

alberta,32,240,4	script	Teleportadora#15	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",1,"Alberta"; close; }
aldebaran,146,118,4	script	Teleportadora#16	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",2,"Aldebaran"; close; }
ayothaya,216,171,5	script	Teleportadora#17	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",4,"Ayotaya"; close; }
amatsu,193,81,1	script	Teleportadora#18	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",3,"Amatsu"; close; }
comodo,195,158,4	script	Teleportadora#19	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",5,"Comodo"; close; }
einbroch,229,196,5	script	Teleportadora#20	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",7,"Einbroch"; close; }
einbech,173,131,5	script	Teleportadora#21	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",6,"Einbech"; close; }
geffen,116,66,4	script	Teleportadora#22	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",8,"Geffen"; close; }
gonryun,162,122,4	script	Teleportadora#23	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",9,"Gonryun"; close; }
hugel,90,127,5	script	Teleportadora#24	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",10,"Hugel"; close; }
jawaii,107,182,5	script	Teleportadora#25	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",12,"Jawaii"; close; }
izlude,134,116,4	script	Teleportadora#26	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",11,"Izlude"; close; }
lighthalzen,149,103,5	script	Teleportadora#27	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",13,"Lighthalzen"; close; }
louyang,211,106,4	script	Teleportadora#28	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",14,"Louyang"; close; }
morocc,159,97,4	script	Teleportadora#29	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",16,"Morroc"; close; }
nif_fild01,319,77,1	script	Teleportadora#30	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",17,"Niflheim"; close; }
payon,178,111,4	script	Teleportadora#31	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",18,"Payon"; close; }
prontera,159,192,4	script	Teleportadora#32	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",0,"Prontera"; close; }
umbala,133,130,4	script	Teleportadora#33	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",19,"Umbala"; close; }
xmas,149,136,4	script	Teleportadora#34	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",15,"Lutie"; close; }
yuno,138,162,4	script	Teleportadora#35	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",20,"Yuno"; close; }
brasilis,201,222,4	script	Teleportadora#36	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",21,"Brasilis"; close; }
dicastes01,194,194,6	script	Teleportadora#37	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",22,"El Dicastes"; close; }
manuk,262,177,4	script	Teleportadora#38	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",23,"Manuk"; close; }
mora,110,100,4	script	Teleportadora#39	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",24,"Mora"; close; }
moscovia,226,191,6	script	Teleportadora#40	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",25,"Moscovia"; close; }
rachel,135,116,4	script	Teleportadora#41	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",26,"Rachel"; close; }
splendide,205,153,4	script	Teleportadora#42	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",27,"Splendide"; close; }
veins,214,123,4	script	Teleportadora#43	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",28,"Veins"; close; }
dewata,194,178,6	script	Teleportadora#44	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",29,"Dewata"; close; }
eclage,107,37,4	script	Teleportadora#45	1_F_ORIENT_02,{ callfunc "QWS_Town_Teleportadora",30,"Eclage"; close; }

ein_dun01,24,27,3	script	Registro de Caverna#8	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",8,"Calabouço da Mina"; close; }
gef_dun00,110,98,3	script	Registro de Caverna#10	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",10,"Calabouço de Geffen"; close; }
mag_dun01,119,79,6	script	Registro de Caverna#17	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",17,"Calabouço de Magma"; close; }
orcsdun01,48,156,3	script	Registro de Caverna#19	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",19,"Calabouço dos Orcs"; close; }
pay_dun00,33,166,3	script	Registro de Caverna#20	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",20,"Caverna de Payon"; close; }
um_dun01,34,35,6	script	Registro de Caverna#27	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",27,"Caverna de Umbala"; close; }
in_sphinx1,290,26,3	script	Registro de Caverna#22	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",22,"Esfinge"; close; }
prt_sewb1,129,255,3	script	Registro de Caverna#7	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",7,"Esgoto de Prontera"; close; }
xmas_dun01,200,30,6	script	Registro de Caverna#25	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",25,"Fábrica de Brinquedos"; close; }
kh_dun01,21,225,3	script	Registro de Caverna#28	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",28,"Fábrica de Rôbos"; close; }
anthell01,46,257,3	script	Registro de Caverna#2	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",2,"Formigueiro Infernal"; close; }
gefenia01,48,170,3	script	Registro de Caverna#9	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",9,"Gefenia"; close; }
glast_01,371,308,3	script	Registro de Caverna#11	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",11,"Glast Heim"; close; }
tur_dun01,148,53,3	script	Registro de Caverna#26	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",26,"Ilha da Tartaruga"; close; }
//beach_dun,256,70,3	script	Registro de Caverna#31	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",31,"Karu, a Caverna Oeste"; close; }
mjolnir_12,39,18,2	script	Registro de Caverna#13	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",13,"Labirinto da Floresta"; close; }
ama_dun01,226,15,5	script	Registro de Caverna#1	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",1,"Labirinto de Tatames"; close; }
ayo_dun02,258,193,5	script	Registro de Caverna#3	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",3,"Labirinto do Santuário Ancestral"; close; }
lhz_dun01,142,289,5	script	Registro de Caverna#15	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",15,"Laboratório de Somatologia"; close; }
abyss_01,261,264,1	script	Registro de Caverna#0	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",0,"Lago do Abismo"; close; }
beach_dun2,157,30,3	script	Registro de Caverna#30	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",30,"Luanda, a Caverna Norte"; close; }
beach_dun3,36,253,3	script	Registro de Caverna#29	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",29,"Mao, Caverna Leste"; close; }
mjo_dun01,59,38,3	script	Registro de Caverna#6	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",6,"Mina Abandonada de Mjolnir"; close; }
treasure01,75,32,3	script	Registro de Caverna#23	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",23,"Navio Fantasma"; close; }
moc_pryd01,176,11,6	script	Registro de Caverna#21	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",21,"Pirâmide"; close; }
jupe_cave,130,55,5	script	Registro de Caverna#14	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",14,"Ruínas de Juperos"; close; }
gon_dun01,157,56,3	script	Registro de Caverna#12	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",12,"Santuário de Xi Wang Mu"; close; }
odin_tem01,115,148,3	script	Registro de Caverna#18	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",18,"Templo de Odin"; close; }
tha_t01,155,44,3	script	Registro de Caverna#24	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",24,"Torre de Thanatos"; close; }
c_tower1,139,24,3	script	Registro de Caverna#5	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",5,"Torre do Relógio"; close; }
lou_dun01,220,188,3	script	Registro de Caverna#16	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",16,"Tumba de Louyang"; close; }
iz_dun00,164,155,1	script	Registro de Caverna#4	4_M_ZONDAOYAJI,{ callfunc "QWS_Dungeon_Teleportadora",4,"Túnel Submarino"; close; }
